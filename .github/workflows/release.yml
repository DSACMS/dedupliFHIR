name: publish

on:
  release:
    types: [published]

jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: "✏️ Generate release changelog"
        uses: heinrichreimer/action-github-changelog-generator@v2.3
        with:
          base: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: |
          git config user.name 'GitHub Actions'
          git config user.email 'actions@users.noreply.github.com'
          git add -A
          timestamp=$(date -u)
          git commit -m "update ${{ matrix.orgs }} data: ${timestamp}" || exit 0
      - name: Push to ${{ github.ref_name }}
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.REPOLINTER_AUTO_TOKEN }}
          branch: main

  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest,macos-latest]
        # windows-latest

    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Configure Node caching
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install poetry
        working-directory: .
        run: pipx install poetry
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          working-directory: .
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      - name: Set up and create virtual environment 
        working-directory: .
        run: |
          poetry config --list
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local
          poetry config --list

      - name: Install dependencies
        working-directory: .
        run: |
          poetry install --no-interaction

      - name: Install Node dependencies
        run: npm install
      - name: Install Node dependencies
        run: npm version ${{ github.ref_name }}

      - name: Build distribution
        env:
          CSC_KEY_PASSWORD: ${{ secrets.CSC_KEY_PASSWORD }}
          CSC_LINK: ${{ secrets.CSC_LINK }}
          APPLEID: ${{ secrets.APPLEID }}
          APPLEIDPASS: ${{ secrets.APPLEIDPASS }}
        run: npm run dist
      - name: Display structure of files
        run: ls -R
      - name: Upload MacOS DMG Blockmap
        uses: actions/upload-artifact@v4
        if: startsWith(matrix.os, 'macos')
        with:
          name: DedupliFHIR-${{ github.ref_name }}-arm64.dmg.blockmap
          path: |
            ./frontend/dist/DedupliFHIR-*-arm64.dmg.blockmap
      - name: Upload MacOS DMG
        uses: actions/upload-artifact@v4
        if: startsWith(matrix.os, 'macos')
        with:
          name: DedupliFHIR-${{ github.ref_name }}-arm64.dmg
          path: |
            ./frontend/dist/DedupliFHIR-*-arm64.dmg
      - name: Upload MacOS Zip
        uses: actions/upload-artifact@v4
        if: startsWith(matrix.os, 'macos')
        with:
          name: DedupliFHIR-${{ github.ref_name }}-arm64-mac.zip
          path: |
            ./frontend/dist/DedupliFHIR-*-arm64-mac.zip
      - name: Upload MacOS Zip Blockmap
        uses: actions/upload-artifact@v4
        if: startsWith(matrix.os, 'macos')
        with:
          name: DedupliFHIR-${{ github.ref_name }}-arm64-mac.zip.blockmap
          path: |
            ./frontend/dist/DedupliFHIR-*-arm64-mac.zip.blockmap
      - name: Upload AppImage
        uses: actions/upload-artifact@v4
        if: startsWith(matrix.os, 'ubuntu')
        with:
          name: DedupliFHIR-${{ github.ref_name }}.AppImage
          path: |
            ./frontend/dist/DedupliFHIR*.AppImage
      - name: Upload Snap
        uses: actions/upload-artifact@v4
        if: startsWith(matrix.os, 'ubuntu')
        with:
          name: DedupliFHIR-${{ github.ref_name }}.snap
          path: |
            ./frontend/dist/deduplifhir-app*.snap
  release:
    permissions: write-all
    name: Release ${{ github.ref_name }}
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download DedupliFHIR-${{ github.ref_name }}.AppImage artifact
      uses: actions/download-artifact@v4
      with:
        name: DedupliFHIR-${{ github.ref_name }}.AppImage
    - name: Download DedupliFHIR-${{ github.ref_name }}.snap artifact
      uses: actions/download-artifact@v4
      with:
        name: DedupliFHIR-${{ github.ref_name }}.snap
    - name: Download DedupliFHIR-${{ github.ref_name }}-arm64.dmg.blockmap artifact
      uses: actions/download-artifact@v4
      with:
        name: DedupliFHIR-${{ github.ref_name }}-arm64.dmg.blockmap
    - name: Download DedupliFHIR-${{ github.ref_name }}-arm64.dmg artifact
      uses: actions/download-artifact@v4
      with:
        name: DedupliFHIR-${{ github.ref_name }}-arm64.dmg
    - name: Download DedupliFHIR-${{ github.ref_name }}-arm64-mac.zip artifact
      uses: actions/download-artifact@v4
      with:
        name: DedupliFHIR-${{ github.ref_name }}-arm64-mac.zip
    - name: Download DedupliFHIR-${{ github.ref_name }}-arm64-mac.zip.blockmap artifact
      uses: actions/download-artifact@v4
      with:
        name: DedupliFHIR-${{ github.ref_name }}-arm64-mac.zip.blockmap
    - name: Display structure of downloaded files
      run: ls -R
    - name: Upload DedupliFHIR-${{ github.ref_name }}.AppImage to release
      uses: svenstaro/upload-release-action@2.9.0
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
        file: DedupliFHIR-${{ github.ref_name }}.AppImage
        overwrite: false
    - name: Upload DedupliFHIR-${{ github.ref_name }}.snap to release
      uses: svenstaro/upload-release-action@2.9.0
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
        file: deduplifhir-app_${{ github.ref_name }}_amd64.snap
        overwrite: false
    - name: Upload DedupliFHIR-${{ github.ref_name }}-arm64.dmg.blockmap to release
      uses: svenstaro/upload-release-action@2.9.0
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
        file: DedupliFHIR-${{ github.ref_name }}-arm64.dmg.blockmap
        overwrite: false
    - name: Upload DedupliFHIR-${{ github.ref_name }}-arm64.dmg to release
      uses: svenstaro/upload-release-action@2.9.0
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
        file: DedupliFHIR-${{ github.ref_name }}-arm64.dmg
        overwrite: false
    - name: Upload DedupliFHIR-${{ github.ref_name }}-arm64-mac.zip to release
      uses: svenstaro/upload-release-action@2.9.0
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
        file: DedupliFHIR-${{ github.ref_name }}-arm64-mac.zip
        overwrite: false

    - name: Upload DedupliFHIR-${{ github.ref_name }}-arm64-mac.zip.blockmap to release
      uses: svenstaro/upload-release-action@2.9.0
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ github.ref_name }}
        file: DedupliFHIR-${{ github.ref_name }}-arm64-mac.zip.blockmap
        overwrite: false
